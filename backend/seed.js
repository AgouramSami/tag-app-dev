const mongoose = require("mongoose");
const User = require("./models/User");
const bcrypt = require("bcrypt");
require("dotenv").config();

const createAdminUser = async () => {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGO_URI, { dbName: "tag_db" });
    console.log("üü¢ Connect√© √† MongoDB");

    // V√©rifier si un admin existe d√©j√†
    const adminExists = await User.findOne({ permissions: "admin" });
    if (adminExists) {
      console.log("‚ùå Un administrateur existe d√©j√†");
      process.exit(1);
    }

    // Cr√©er l'administrateur
    const hashedPassword = await bcrypt.hash("Elodie.Pln91", 10);
    const admin = new User({
      email: "admin@gmail.com",
      password: hashedPassword,
      nom: "Admin",
      prenom: "System",
      fonction: "administrateur",
      commune: new mongoose.Types.ObjectId(), // Commune par d√©faut
      permissions: "admin",
      isValidated: true,
      isActive: true,
    });

    await admin.save();
    console.log("‚úÖ Administrateur cr√©√© avec succ√®s");
    console.log("Email:", admin.email);
    console.log("Mot de passe: Elodie.Pln91");

    // D√©connexion de MongoDB
    await mongoose.disconnect();
    console.log("üî¥ D√©connect√© de MongoDB");
    process.exit(0);
  } catch (error) {
    console.error("‚ùå Erreur:", error);
    process.exit(1);
  }
};

createAdminUser();
